datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("input/base.xlsx", sheet = "m2-hab")
datos <- read_excel("input/base.xlsx", sheet = "calidadvida-urb")
view(datos)
View(datos)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
View(datos)
dim(datos)
View(datos)
datos2 <- read_excel("input/base2.xls")
datos2 <- read_excel("input/base2.xls")
library(readxl)
base2 <- read_excel("input/base2.xls")
View(datos)
find_var(data = datos,"METROPOLITANA")
find_var(data = datos,"13001")
find_var(data = datos,"Providencia")
find_var(data = datos,"9")
View(datos)
find_var(data = datos,"GRAN SANTIAGO")
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
dim(datos)
datos2 <- read_excel("input/base2.xls")
view(datos)
find_var(data = latinobarometro2020,"Comuna")
find_var(data = datos,"Comuna")
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`, # Confianza en el congreso
`Superficie Plazas (m2)`, # Confianza en el Poder Judicial
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`) # pais
# Comprobar
names(proc_data)
View(proc_data)
sjlabelled::get_label(proc_data)
View(datos)
View(datos)
View(datos)
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región
Cod_Ciudad)
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región
Cod_Ciudad)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región
Cod_Ciudad)
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
# Comprobar
names(proc_data)
sjlabelled::get_label(proc_data)
view(proc_data)
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001)
View(proc_data)
# PROCESAMIENTO -----
view(datos)
# PROCESAMIENTO -----
frq(proc_data$Comuna)
# PROCESAMIENTO -----
frq(proc_data$`Superficie de Área Verde (m2)`)
# 1. Exploración inicial ----
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
options(scipen=999) # valores sin notación científica
# 1. Exploración inicial ----
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
# 1. Exploración inicial ----
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
# 1. Exploración inicial ----
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 1. Exploración inicial ----
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
options(scipen=999) # valores sin notación científica
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999) # valores sin notación científica
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("C:/Users/arell/OneDrive/Documentos/GitHub/r-uah-practico/input", sheet = "areaverde-hab")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel("C:/Users/arell/OneDrive/Documentos/GitHub/r-uah-practico/input", sheet = "areaverde-hab")
# 1. Exploración inicial ----
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
## 2. 1 Comprobar ----
names(proc_data)
sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
# PROCESAMIENTO -----
frq(proc_data$`Superficie de Área Verde (m2)`)
# 1. Exploración inicial ----
options(scipen=999)
# PROCESAMIENTO -----
frq(proc_data$`Superficie de Área Verde (m2)`)
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
## 2. 1 Comprobar ----
names(proc_data)
sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
# PROCESAMIENTO -----
frq(proc_data$`Superficie de Área Verde (m2)`)
# PROCESAMIENTO -----
frq(proc_data$`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`)
proc_data <- proc_data %>% rename("comuna"=Comuna, # Confianza en el gobierno
"region"=Región, # Confianza en el congreso
"sup_averde"=`Superficie de Área Verde (m2)`, # Confianza en el Poder Judicial
"sup_plaza"=`Superficie Plazas (m2)`
"sup_hab"=`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)` ) # Confianza en los partidos políticos
proc_data <- proc_data %>% rename("comuna"=Comuna, # Confianza en el gobierno
"region"=Región, # Confianza en el congreso
"sup_averde"=`Superficie de Área Verde (m2)`, # Confianza en el Poder Judicial
"sup_plaza"=`Superficie Plazas (m2)`,
"sup_hab"=`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)` ) # Confianza en los partidos políticos
proc_data <- proc_data %>% rename("comuna"=Comuna,
"region"=Región,
"sup_averde"=`Superficie de Área Verde (m2)`,
"sup_plaza"=`Superficie Plazas (m2)`,
"sup_hab"=`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`)
View(proc_data)
proc_data$sup_total <- (proc_data$sup_averde+proc_data$sup_plaza)
summary(proc_data$sup_total)
frq(proc_data$sup_hab)
frq(proc_data$sup_averde)
frq(proc_data$sup_plaza)
proc_data$comuna <- set_labels(proc_data$comuna,
labels=c( "Santiago"=1,
"Cerrillos"=2,
"Algo"=3,
"Mucha"=4,
))
proc_data$comuna <- set_labels(proc_data$comuna,
labels=c( "Santiago"=1,
"Cerrillos"=2))
view(proc_data) #Ver data procesada
```{# 1. Exploración inicial ----}
```{# 1. Exploración inicial ----}
# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
## 2. 1 Comprobar ----
names(proc_data)
sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
```
#| echo: false
2 * 2
```{# 1. Exploración inicial ----}
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
## 2. 1 Comprobar ----
names(proc_data)
sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
library(readxl)
base <- read_excel("base.xlsx")
View(base)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("base.xlsx", sheet = "areaverde-hab")
datos <- read_dta("C:/Users/arell/OneDrive/Documentos/GitHub/r-uah-practico/input", encoding = "UTF-8")
datos <- read_excel("C:/Users/arell/OneDrive/Documentos/GitHub/r-uah-practico/input")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
datos <- read_excel("base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
## 2. 1 Comprobar ----
names(proc_data)
sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
# PROCESAMIENTO -----
frq(proc_data$`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`)
proc_data <- proc_data %>% rename("comuna"=Comuna,
"region"=Región,
"sup_averde"=`Superficie de Área Verde (m2)`,
"sup_plaza"=`Superficie Plazas (m2)`,
"sup_hab"=`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`)
proc_data$sup_total <- (proc_data$sup_averde+proc_data$sup_plaza) #Sumar los m2 totales de plazas y areas verdes
summary(proc_data$sup_total)
frq(proc_data$sup_plaza)
stargazer(proc_data,type = "text")
sjmisc::descr(proc_data)
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>%
kable(.,"markdown")
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
proc_data2 <- proc_data %>% select(cumuna,
sup_averde,
sup_hab,
sup_plaza)
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
`Superficie de Área Verde (m2)`,
`Superficie Plazas (m2)`,
`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
Región,
Cod_Ciudad)
## 2. 1 Comprobar ----
names(proc_data)
sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
# PROCESAMIENTO -----
frq(proc_data$`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`)
proc_data <- proc_data %>% rename("comuna"=Comuna,
"region"=Región,
"sup_averde"=`Superficie de Área Verde (m2)`,
"sup_plaza"=`Superficie Plazas (m2)`,
"sup_hab"=`BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`)
proc_data2 <- proc_data %>% select(cumuna,
sup_averde,
sup_hab,
sup_plaza)
proc_data2 <- proc_data %>% select(comuna,
sup_averde,
sup_hab,
sup_plaza)
View(proc_data2)
frq(proc_data2$sup_hab)
frq(proc_data2$sup_averde)
frq(proc_data2$sup_plaza)
stargazer(proc_data2,type = "text")
sjmisc::descr(proc_data)
sjmisc::descr(proc_data2)
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
view(dfSummary(proc_data2, headings=FALSE))
view(dfSummary(proc_data2, headings=FALSE))
proc_data2 %>% ggplot(aes(x = sup_hab)) +
geom_bar()
proc_data2 <- proc_data2 %>% select("PROVIDENCIA",
"SANTIAGO",
"ÑUÑOA",
"LAS CONDES",
"SAN MIGUEL")
proc_data2<- filter(proc_data2, comuna == "PROVIDENCIA",
"SAN MIGUEL",
"LAS CONDES",
"VITACURA",
"ÑUÑOA",
"RENCA",
"LA PINTANA",
"MACUL")
proc_data2<- filter (proc_data2, comuna == "PROVIDENCIA",
"SAN MIGUEL",
"LAS CONDES",
"VITACURA",
"ÑUÑOA",
"RENCA",
"LA PINTANA",
"MACUL")
# Filtrar el dataframe para incluir solo las filas donde la columna "comuna" coincide con algunas comunas específicas
proc_data2 <- filter(proc_data2, comuna %in% c("PROVIDENCIA",
"SAN MIGUEL",
"LAS CONDES",
"VITACURA",
"ÑUÑOA",
"RENCA",
"LA PINTANA",
"MACUL"))
View(proc_data2)
frq(proc_data2$sup_hab)
frq(proc_data2$sup_averde)
frq(proc_data2$sup_plaza)
sjmisc::descr(proc_data2)
sjmisc::descr(proc_data,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
summarytools::dfSummary(proc_data, plain.ascii = FALSE)
proc_data2 %>% ggplot(aes(x = sup_hab)) +
geom_bar()
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n"))%>% # Selecciona estadísticos
kable(.,"markdown") # Esto es para que se vea bien en quarto
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n")) # Selecciona estadísticos
sjmisc::descr(proc_data2)
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
proc_data2 <- proc_data %>% select(comuna,
sup_averde,
sup_plaza)
# Filtrar el dataframe para incluir solo las filas donde la columna "comuna" coincide con algunas comunas específicas
proc_data2 <- filter(proc_data2, comuna %in% c("PROVIDENCIA",
"SAN MIGUEL",
"LAS CONDES",
"VITACURA",
"ÑUÑOA",
"RENCA",
"LA PINTANA",
"MACUL"))
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n")) # Selecciona estadísticos
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
summarytools::dfSummary(proc_data2, plain.ascii = FALSE)
proc_data2 %>% ggplot(aes(x = sup_hab)) +
geom_bar()
summarytools::dfSummary(proc_data2, plain.ascii = FALSE)
proc_data2 %>% ggplot(aes(x = comuna)) +
geom_bar()
proc_data3 <- proc_data %>% select(sup_hab)
View(proc_data3)
proc_data3 <- proc_data %>% select(comuna,
sup_hab)
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n")) # Selecciona estadísticos
sjmisc::descr(proc_data3,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
sjmisc::descr(proc_data2,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
sjmisc::descr(proc_data3,
show = c("label","range", "mean", "sd", "NA.prc", "n"))
proc_data2 %>% ggplot(aes(x = comuna)) +
geom_bar()
proc_data2 %>% ggplot(aes(x = comuna)) +
geom_bar()
summarytools::dfSummary(proc_data3, plain.ascii = FALSE)
proc_data2 %>% ggplot(aes(x = comuna)) +
geom_bar()
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("proc/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel("proc/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("input/base.xlsx"), sheet = "areaverde-hab")
datos <- read_excel ("input/base.xlsx"), sheet = "areaverde-hab")
datos <- read_excel ("input/base.xlsx") sheet = "areaverde-hab")
datos <- read_excel ("input/base.xlsx"),
o
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel ("proc/base.xlsx"), sheet = "areaverde-hab")
datos <- read_excel ("output/base.xlsx"), sheet = "areaverde-hab")
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
datos <- read_excel ("output/base.xlsx"), sheet = "areaverde-hab")
datos <- read_excel("output/base.xlsx", sheet = "areaverde-hab")
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
library(readxl)
base <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
View(base)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
library(readxl)
base <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
library(readxl)
base <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse, readxl)
library(readxl)
base <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
library(readxl)
base <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
View(base)
