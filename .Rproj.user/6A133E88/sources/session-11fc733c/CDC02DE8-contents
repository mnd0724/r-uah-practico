---
title: "trabajo2"
format: html
editor: visual
---

## Quarto

Quarto enables you to weave together content and executable code into a finished document. To learn more about Quarto see <https://quarto.org>.

## Running Code

When you click the **Render** button a document will be generated that includes both content and the output of embedded code. You can embed code like this:

```{r}
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)

# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
                                            `Superficie de Área Verde (m2)`, 
                                            `Superficie Plazas (m2)`, 
                                            `BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
                              Región,
                              Cod_Ciudad) 

## 2. 1 Comprobar ----
names(proc_data)

sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada 
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
```

```         
# 1. Exploración inicial ----
options(scipen=999)
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)

# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
                                            `Superficie de Área Verde (m2)`, 
                                            `Superficie Plazas (m2)`, 
                                            `BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
                              Región,
                              Cod_Ciudad) 

## 2. 1 Comprobar ----
names(proc_data)

sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada 
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
```

```{options(scipen=999)}
rm(list=ls())       # borrar todos los objetos en el espacio de trabajo
pacman::p_load(dplyr, sjmisc, car, sjlabelled, stargazer, haven, tidyverse)
datos <- read_excel("input/base.xlsx", sheet = "areaverde-hab")
view(datos)
dim(datos)

# 2. Selección de variables ----
proc_data <- datos %>% select(Comuna,
                                            `Superficie de Área Verde (m2)`, 
                                            `Superficie Plazas (m2)`, 
                                            `BPU_29 Superficie de Área Verde por Habitantes (m2/Hab)`,
                              Región,
                              Cod_Ciudad) 

## 2. 1 Comprobar ----
names(proc_data)

sjlabelled::get_label(proc_data) #Observar las etiquetas de las variables
view(proc_data) #Ver data procesada 
proc_data <- proc_data %>% dplyr::filter(Cod_Ciudad==13001) #Filtrar por región (metropolitana)
```

You can add options to executable code like this

```{r}
#| echo: false
```
